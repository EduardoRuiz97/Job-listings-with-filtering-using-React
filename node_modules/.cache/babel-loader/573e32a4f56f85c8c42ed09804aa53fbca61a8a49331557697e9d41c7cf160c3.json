{"ast":null,"code":"var _jsxFileName = \"/home/rosi/Documents/Eduardo/React/React Exercise/Ejercicio 6/static-job-listings-master/01-starting-project/src/store/JobsContextProvider.js\",\n  _s = $RefreshSig$();\nimport jobsContext from './JobsContext';\nimport jobList from '../Assets/data.json';\nimport { useReducer, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultState = jobList;\nconst filterReducer = (state, action) => {\n  if (action.type === 'FILTER') {\n    let filteredArray = state.filter(item => !item.languages.indexOf(action.val));\n    return {\n      filter\n    };\n  }\n  return defaultState;\n};\nconst ContextProvider = props => {\n  _s();\n  const [arrayState, dispatchArray] = useReducer(filterReducer, defaultState);\n  const [filterArray, setFilterArray] = useState([]);\n  const filteredFunction = condition => {\n    dispatchArray({\n      type: \"FILTER\",\n      val: condition\n    });\n    const filterArrayIndex = filterArray.indexOf(condition);\n    if (filterArrayIndex === -1) {\n      setFilterArray(prevState => {\n        return [condition, ...prevState];\n      });\n    }\n  };\n  const clearFilterArrayHandler = emptyArray => {\n    setFilterArray(emptyArray);\n  };\n  const deleteFilterHandler = item => {\n    dispatchArray({\n      type: \"DELETE\",\n      item: item\n    });\n    const newArrayOffilters = filterArray.filter(filter => filter !== item);\n    setFilterArray(newArrayOffilters);\n  };\n  const listJobContext = {\n    filterItems: arrayState,\n    filterArray: filterArray,\n    clearFilterArray: clearFilterArrayHandler,\n    filterFunction: filteredFunction,\n    deleteFilter: deleteFilterHandler\n  };\n  return /*#__PURE__*/_jsxDEV(jobsContext.Provider, {\n    value: listJobContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(ContextProvider, \"xPBXRe3HryLviM8OrSXRPDadA5k=\");\n_c = ContextProvider;\nexport default ContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["jobsContext","jobList","useReducer","useState","jsxDEV","_jsxDEV","defaultState","filterReducer","state","action","type","filteredArray","filter","item","languages","indexOf","val","ContextProvider","props","_s","arrayState","dispatchArray","filterArray","setFilterArray","filteredFunction","condition","filterArrayIndex","prevState","clearFilterArrayHandler","emptyArray","deleteFilterHandler","newArrayOffilters","listJobContext","filterItems","clearFilterArray","filterFunction","deleteFilter","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/rosi/Documents/Eduardo/React/React Exercise/Ejercicio 6/static-job-listings-master/01-starting-project/src/store/JobsContextProvider.js"],"sourcesContent":["import jobsContext from './JobsContext';\nimport jobList from '../Assets/data.json';\nimport { useReducer, useState} from 'react';\n\n\n\nconst defaultState = jobList;\n\nconst filterReducer = (state, action) => {\n\n  if (action.type === 'FILTER') {\n    let filteredArray = state.filter(item => !item.languages.indexOf(action.val));\n    \n    return {\n      filter\n    }\n\n  }\n\n\n  return defaultState;\n} \n\n\nconst ContextProvider = props => {\n\n  const [arrayState, dispatchArray] = useReducer(filterReducer, defaultState);\n\n  const [filterArray, setFilterArray] = useState([]);\n\n\n  const filteredFunction = (condition) => {\n    dispatchArray({type: \"FILTER\", val: condition})\n\n\n\n    const filterArrayIndex = filterArray.indexOf(condition);\n\n    if (filterArrayIndex === -1) {\n      setFilterArray(prevState => {\n        return [condition, ...prevState]\n      })\n    }\n\n  }\n\n\n  const clearFilterArrayHandler = (emptyArray) => {\n    setFilterArray(emptyArray);\n  }\n\n  const deleteFilterHandler = (item) => {\n    dispatchArray({type: \"DELETE\", item: item})\n\n    const newArrayOffilters = filterArray.filter(filter => filter !== item);\n\n    setFilterArray(newArrayOffilters)\n  }\n\n\n  const listJobContext = {\n    filterItems: arrayState,\n    filterArray: filterArray,\n    clearFilterArray: clearFilterArrayHandler,\n    filterFunction: filteredFunction,\n    deleteFilter: deleteFilterHandler,\n  };\n\n\n  return (\n    <jobsContext.Provider value={listJobContext}>{props.children}</jobsContext.Provider>\n  )\n}\n\nexport default ContextProvider;"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,eAAe;AACvC,OAAOC,OAAO,MAAM,qBAAqB;AACzC,SAASC,UAAU,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI5C,MAAMC,YAAY,GAAGL,OAAO;AAE5B,MAAMM,aAAa,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAEvC,IAAIA,MAAM,CAACC,IAAI,KAAK,QAAQ,EAAE;IAC5B,IAAIC,aAAa,GAAGH,KAAK,CAACI,MAAM,CAACC,IAAI,IAAI,CAACA,IAAI,CAACC,SAAS,CAACC,OAAO,CAACN,MAAM,CAACO,GAAG,CAAC,CAAC;IAE7E,OAAO;MACLJ;IACF,CAAC;EAEH;EAGA,OAAON,YAAY;AACrB,CAAC;AAGD,MAAMW,eAAe,GAAGC,KAAK,IAAI;EAAAC,EAAA;EAE/B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGnB,UAAU,CAACK,aAAa,EAAED,YAAY,CAAC;EAE3E,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAGlD,MAAMqB,gBAAgB,GAAIC,SAAS,IAAK;IACtCJ,aAAa,CAAC;MAACX,IAAI,EAAE,QAAQ;MAAEM,GAAG,EAAES;IAAS,CAAC,CAAC;IAI/C,MAAMC,gBAAgB,GAAGJ,WAAW,CAACP,OAAO,CAACU,SAAS,CAAC;IAEvD,IAAIC,gBAAgB,KAAK,CAAC,CAAC,EAAE;MAC3BH,cAAc,CAACI,SAAS,IAAI;QAC1B,OAAO,CAACF,SAAS,EAAE,GAAGE,SAAS,CAAC;MAClC,CAAC,CAAC;IACJ;EAEF,CAAC;EAGD,MAAMC,uBAAuB,GAAIC,UAAU,IAAK;IAC9CN,cAAc,CAACM,UAAU,CAAC;EAC5B,CAAC;EAED,MAAMC,mBAAmB,GAAIjB,IAAI,IAAK;IACpCQ,aAAa,CAAC;MAACX,IAAI,EAAE,QAAQ;MAAEG,IAAI,EAAEA;IAAI,CAAC,CAAC;IAE3C,MAAMkB,iBAAiB,GAAGT,WAAW,CAACV,MAAM,CAACA,MAAM,IAAIA,MAAM,KAAKC,IAAI,CAAC;IAEvEU,cAAc,CAACQ,iBAAiB,CAAC;EACnC,CAAC;EAGD,MAAMC,cAAc,GAAG;IACrBC,WAAW,EAAEb,UAAU;IACvBE,WAAW,EAAEA,WAAW;IACxBY,gBAAgB,EAAEN,uBAAuB;IACzCO,cAAc,EAAEX,gBAAgB;IAChCY,YAAY,EAAEN;EAChB,CAAC;EAGD,oBACEzB,OAAA,CAACL,WAAW,CAACqC,QAAQ;IAACC,KAAK,EAAEN,cAAe;IAAAO,QAAA,EAAErB,KAAK,CAACqB;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAwB;AAExF,CAAC;AAAAxB,EAAA,CAhDKF,eAAe;AAAA2B,EAAA,GAAf3B,eAAe;AAkDrB,eAAeA,eAAe;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}